1.在解压出来的主目录下依次创建tfrecords_、train_model、VOC2007文件夹，三个文件夹Annotations、ImageSets、JPEGImages全都拖入VOC2007文件夹内；

2.tfrecords_文件夹是用来存储.tfrecords文件（后面有程序可以直接生成）train_model文件夹是用来存储模型的记录与参数的

3.修改标签项——打开datasets文件夹中pascalvoc_common.py文件，将自己的标签项填入。我之前做的图片标签.xml文件中，就只有一个标签项“watch”，所以要根据你自己数据集实际情况进行修改；

4.修改读取个数、读取方式——打开datasets文件夹中的pascalvoc_to_tfrecords.py文件，
修改67行SAMPLES_PER_FILES的个数；
修改83行读取方式为'rb'；
如果你的文件不是.jpg格式，也可以修改图片的类型82行；

5.生成.tfrecords文件——打开tf_convert_data.py文件，运行tf_convert_data.py文件，在面板中得到成功信息，可以在tfrecords_文件夹下看到生成的.tfrecords文件；python tf_convert_data.py 下列参数
--dataset_name=pascalvoc
--dataset_dir=./VOC2007/
--output_name=voc_2007_train
--output_dir=./tfrecords_

6.修改训练数据shape——打开datasets文件夹中的pascalvoc_2007.py文件，根据自己训练数据修改：NUM_CLASSES = 类别数；

7.修改类别个数——打开nets文件夹中的ssd_vgg_300.py文件，根据自己训练类别数修改96 和97行：等于类别数+1；

8.修改类别个数——打开eval_ssd_network.py文件，修改66行的类别个数：等于类别数+1；

9.修改训练步数epoch——打开train_ssd_network.py文件，
修改27行的数据格式，改为'NHWC'；
修改135行的类别个数：等于类别数+1；
修改154行训练总步数，None会无限训练下去；
说明：60行、63行是关于模型保存的参数；

10.train_ssd_network.py文件
以下参数：

--train_dir=./train_model/
--dataset_dir=./tfrecords_/
--dataset_name=pascalvoc_2007
--dataset_split_name=train
--model_name=ssd_300_vgg
--checkpoint_path=./checkpoints/vgg_16.ckpt
--checkpoint_model_scope=vgg_16
--checkpoint_exclude_scopes=ssd_300_vgg/conv6,ssd_300_vgg/conv7,ssd_300_vgg/block8,ssd_300_vgg/block9,ssd_300_vgg/block10,ssd_300_vgg/block11,ssd_300_vgg/block4_box,ssd_300_vgg/block7_box,ssd_300_vgg/block8_box,ssd_300_vgg/block9_box,ssd_300_vgg/block10_box,ssd_300_vgg/block11_box
--trainable_scopes=ssd_300_vgg/conv6,ssd_300_vgg/conv7,ssd_300_vgg/block8,ssd_300_vgg/block9,ssd_300_vgg/block10,ssd_300_vgg/block11,ssd_300_vgg/block4_box,ssd_300_vgg/block7_box,ssd_300_vgg/block8_box,ssd_300_vgg/block9_box,ssd_300_vgg/block10_box,ssd_300_vgg/block11_box
--save_summaries_secs=60
--save_interval_secs=100
--weight_decay=0.0005
--optimizer=adam
--learning_rate=0.001
--learning_rate_decay_factor=0.94
--batch_size=4
--gpu_memory_fraction=0.7


参数示意：
--save_interval_secs是训练多少次保存参数的步长；
--optimizer是优化器；
--learning_rate是学习率；
--learning_rate_decay_factor是学习率衰减因子；
如果你的机器比较强大，可以适当增大--batch_size的数值，以及调高GPU的占比--gpu_memory_fraction

11.
在日志中，选取最后一次生成模型作为测试模型进行测试；
在demo文件夹下放入测试图片；
最后在notebooks文件夹下建立demo_test.py测试文件
注意第48行，导入的新模型的名称是否正确；